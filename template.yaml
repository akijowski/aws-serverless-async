AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-async-ref-arch-demo
  
  Reference architecture for an asynchronous REST API using serverless infrastructure

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Tracing: Active
    Architectures:
      - x86_64
    Runtime: go1.x
  Api:
    OpenApiVersion: 3.0.1
    TracingEnabled: True

Resources:
  UsersApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Ref 'AWS::StackName'
      Description: The REST API for the Users
      Mode: merge
      # AWS SAM will parse this OpenAPI spec for us and configure the API Gateway
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: reference/openapi.yaml
      StageName: live
      AccessLogSetting:
        DestinationArn: !GetAtt ApiAccessLogsGroup.Arn
        Format: '{"caller":"$context.identity.caller","httpMethod":"$context.httpMethod","ip":"$context.identity.sourceIp","protocol":"$context.protocol","requestId":"$context.requestId","requestTime":"$context.requestTime","resourcePath":"$context.resourcePath","responseLength":"$context.responseLength","status":"$context.status","user":"$context.identity.user"}'
      Variables:
        MessageIDIndex: bar
        TableName: foo
  ApiAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/apigw/${AWS::StackName}-access'
      RetentionInDays: 5
  ApiIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-api-role'
      Description: !Sub 'Service Role for ${AWS::StackName} API'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: SQSSenderPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:SendMessage"
                Resource:
                  - !GetAtt UserCreationQueue.Arn

  UserCreationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-user-creation'
